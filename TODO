deal with namespace collapsing and finalize keyword properties

finalize syntax and refactor the standard

determine whether this syntax is okay: //(this.obj = o.obj).obj_count++;

finish r_array and the rest of the collections

decide whether range can be a struct





set down the declarations for print and other basic things

make the formatting procedures for the basic types

parallelism utilities

networking utilities

update syntax in library and remove demos et cetera from the library

add dispatch keyword (only use gloabal thread pool) and versions that block and also run in the calling thread
-task assignment
	-version with both "fills from the bottom," and version that runs in the calling thread but doesn't block "fills from the top"
	-calling thread takes off the task queue
	-maybe a hybrid version

maybe parallel keyword can have different uses on a block vs a declaration vs a hyperexpression

compiler option for a file that defines natural language aliases and a file that defines global project aliases



dispatch
{
	foo(a, 0);	//as if foo is wrapped in a parallel hyperexpression since there are multiple in a dispatch/parallel block
	foo(a, 5);	//warning if foo is a (<<) procedure since it wouldn't be that useful to run in parallel because arguments are allowed in dispatch/parallel block 
}

